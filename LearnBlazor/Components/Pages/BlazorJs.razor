@page "/blazorjs"
@inject IJSRuntime JSRuntime

<h3>BlazorJs</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made</p>
    }
    else
    {
        <p>Pending Confirmation</p>
    }
</div>

<div class="row">
    <button class="btn btn-success m-2" style="width:200px" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="ToastrError">Toastr Failure</button>
</div>

<div class="row">
    <button class="btn btn-success m-2" style="width:200px" @onclick="SweetalertSuccess">Sweetalert Success</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="SweetalertError">Sweetalert Failure</button>
</div>

@code {
    private string ConfrimMessage = "Are you sure you want to proceed?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await JSRuntime.InvokeAsync<bool>("confirm", ConfrimMessage);
    }

    private void ToastrSuccess()
    {
      //  JSRuntime.InvokeVoidAsync("showToastr", "success", "Success Notification");

        JSRuntime.ToastrSucess("Success Notification");
    }

    private void ToastrError()
    {
        //JSRuntime.InvokeVoidAsync("showToastr", "error", "Error Notification");

        JSRuntime.ToastrError("Error Notification");
    }
    private void SweetalertSuccess()
    {
        JSRuntime.InvokeVoidAsync("ShowSwal", "success", "Task Completed");
    }

    private void SweetalertError()
    {
        JSRuntime.InvokeVoidAsync("ShowSwal", "error", "Task Failed");
    }
}
