<div class="bg-light border col-6" @onclick="(args) => SelectedProductChange(args,Product.productName)">
    <h4 class="text-secondary">Product - @Product.productId</h4>

    <input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorites <br /> <br />
    Name - @Product.productName <br />
    Show Properties -
    <input type="checkbox" @bind="Product.IsActive" /> <br />

    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.key - @prodProp.value</p>
        }
    }
    <br />
    <_DeleteButtonComponent ProductId="@Product.productId" ProductName="@Product.productName"></_DeleteButtonComponent>
</div>

@code {

    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdate { get; set;}

    [Parameter]
    public EventCallback<string> OnSelectedProductChange {get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdate.InvokeAsync((bool)(e.Value??false));
    }

    private async Task SelectedProductChange(MouseEventArgs e,string productName)
    {
        await OnSelectedProductChange.InvokeAsync(productName);
    }
}
